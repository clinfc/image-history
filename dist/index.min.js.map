{"version":3,"sources":["webpack://ImageHistory/webpack/universalModuleDefinition","webpack://ImageHistory/webpack/bootstrap","webpack://ImageHistory/./src/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","attributeFilter","listener","filter","values","forEach","row","push","verify","node","images","Set","Element","nodeName","isValidElem","attr","hasAttribute","add","getAttribute","targets","defFilter","Map","this","keys","toUpperCase","test","Array","isArray","statistics","MutationObserver","mutations","record","type","addedNodes","removedNodes","img","valid","set","target","oldValue","attributeName","has","observe","subtree","childList","attributes","attributeOldValue","temp","entries","attrs","old","now","status","image","all","map","from","querySelectorAll","el","clear","mirroring","disconnect","fn"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ImageHistory\"] = factory();\n\telse\n\t\troot[\"ImageHistory\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @protected 媒体文件（image）监控\n */\n\n/*\n1、初始化时建立镜像，作为多频次链接是否为原始链接的依据\n2、新增的多频次链接未被删尽时仍被认为是新增链接\n3、需要区分链接为新增或删除\n3、新增的链接是镜像中存在的链接时，不被认定为新增链接\n\n名词解释：\n    多频图片：同一链接多次出现\n    镜像数据：被绑定的根节点下某一时刻的图片数据。比如二次编辑文章时需要构建镜像数据作为后续图片增减的依据。\n*/\n\ntype Listener = {\n    [propName: string]: Set<string>\n}\n\nexport type Validator = (value: string) => boolean\n\nexport type Targets = {\n    [propName: string]: string[]\n}\n\n/**\n * 统计链接及同一个链接出现的次数\n */\nexport type Mirroring = {\n    [propName: string]: number\n}\n\nfunction attributeFilter(listener: Listener) {\n    const filter: string[] = []\n    Object.values(listener).forEach(row => {\n        filter.push(...row)\n    })\n    return filter\n}\n\n/**\n * 验证当前节点是否为有效节点\n * @param listener 被监听的节点缓存\n * @param node 被验证的节点\n */\nfunction isValidElem(listener: Listener, node: Node) {\n    return node instanceof Element && listener[node.nodeName] instanceof Set\n}\n\n/**\n * 验证 attribute 名是否有效\n * @param node 被验证的 Element 节点\n * @param attr 被验证的 attribute 名\n */\nfunction isValidAttr(listener: Listener, node: Node, attr: string | null) {\n    return attr && node instanceof Element && listener[node.nodeName] instanceof Set && listener[node.nodeName].has(attr)\n}\n\nfunction verify(node: Node, listener: Listener) {\n    const images: Set<string> = new Set()\n    if (isValidElem(listener, node)) {\n        listener[node.nodeName].forEach(attr => {\n            if ((node as Element).hasAttribute(attr)) {\n                images.add((node as Element).getAttribute(attr) as string)\n            }\n        })\n    }\n    return [...images]\n}\n\n/**\n * 图片的历史记录，需要在 editor.create 之后调用\n *\n * eg：editor.imgs = new ImageHistory(editor.$textElem.elems[0])\n */\nexport default class ImageHistory {\n    #root: Element\n\n    /**\n     * 需要被监听的节点的 nodeName 及对应的 attribute 属性名\n     */\n    #listener: Listener = {}\n\n    /**\n     * 监听器\n     */\n    #observer: MutationObserver\n\n    /**\n     * 根节点下某一刻的图片镜像数据\n     */\n    #mirroring: Mirroring\n\n    /**\n     * image 标签的变化记录。boolean 值表示 image 标签当前的状态，为 true 表示存在于文档中；为 false 表示该 image 标签被删除。\n     */\n    #changed: Map<string, boolean> = new Map()\n\n    /**\n     * 图片链接的验证规则\n     *\n     */\n    #rules: Validator[] = []\n\n    /**\n     * 当前实例监听的根节点\n     */\n    public get root() {\n        return this.#root\n    }\n\n    /**\n     * 当前实例的图片镜像数据\n     */\n    public get mirroring() {\n        return { ...this.#mirroring }\n    }\n\n    /**\n     * 监听的节点类型及该节点对应监听的 attribute 名\n     */\n    public get listener() {\n        const temp: { [propName: string]: string[] } = {}\n        Object.entries(this.#listener).forEach(([nodeName, attrs]) => {\n            temp[nodeName] = [...attrs]\n        })\n        return temp\n    }\n\n    /**\n     * @param root 被监听的 Element 节点，这里指 wangEditor 的编辑区根节点\n     */\n    constructor(root: Element, targets?: Targets, filter?: Validator | Validator[] | false, defFilter: boolean = true) {\n        // 被监听的根节点\n        this.#root = root\n\n        // 初始化需要被监听的节点的 nodeName 及对应的 attribute 属性名\n        if (targets && typeof targets === 'object') {\n            Object.keys(targets).forEach(nodeName => {\n                this.#listener[nodeName.toUpperCase()] = new Set(targets[nodeName])\n            })\n        }\n        // 添加默认监听 img 的  src attribute\n        if (this.#listener['IMG']) {\n            this.#listener['IMG'].add('src')\n        } else {\n            this.#listener['IMG'] = new Set(['src'])\n        }\n\n        // 初始化过滤规则\n        // 内置规则（非 base64/URL.createObjectURL 图片链接）\n        if (filter !== false && defFilter) {\n            this.#rules.push(function (value: string) {\n                return !/^(data:|blob:)/.test(value)\n            })\n        }\n        // 用户自定义规则\n        if (Array.isArray(filter)) {\n            this.#rules.push(...filter)\n        } else if (typeof filter === 'function') {\n            this.#rules.push(filter)\n        }\n\n        this.#mirroring = this.statistics()\n\n        // 初始化监听器\n        this.#observer = new MutationObserver(mutations => {\n            mutations.forEach(record => {\n                if (record.type == 'childList') {\n                    const { addedNodes, removedNodes } = record\n\n                    removedNodes.forEach(node => {\n                        verify(node, this.#listener).forEach(img => {\n                            if (this.valid(img)) {\n                                this.#changed.set(img, false)\n                            }\n                        })\n                    })\n\n                    addedNodes.forEach(node => {\n                        verify(node, this.#listener).forEach(img => {\n                            if (this.valid(img)) {\n                                this.#changed.set(img, true)\n                            }\n                        })\n                    })\n                } else {\n                    const { target, oldValue, attributeName } = record\n                    if (isValidAttr(this.#listener, target, attributeName)) {\n                        if (oldValue && this.valid(oldValue)) {\n                            this.#changed.set(oldValue as string, false)\n                        }\n                        const attr = (target as Element).getAttribute(attributeName as string) as string\n                        if (attr && this.valid(attr)) {\n                            this.#changed.set(attr, true)\n                        }\n                    }\n                }\n            })\n        })\n\n        // 绑定监听\n        this.#observer.observe(root, {\n            subtree: true,\n            childList: true,\n            attributes: true,\n            attributeOldValue: true,\n            attributeFilter: attributeFilter(this.#listener),\n        })\n    }\n\n    /**\n     * 返回所有的历史记录信息\n     */\n    public all() {\n        // 镜像图片\n        const old = this.#mirroring\n\n        // 统计当前的图片\n        const now = this.statistics()\n\n        // 生成所有的图片历史记录信息\n        const temp: { image: string; type: 'inserted' | 'deleted' }[] = []\n        this.#changed.forEach((status, img) => {\n            // 新添加的图片 && 非镜像中的图片\n            if (status && !old[img]) {\n                temp.push({\n                    image: img,\n                    type: 'inserted',\n                })\n            }\n            // 被删除的图片\n            else {\n                // 该图片被删尽\n                if (!now[img]) {\n                    temp.push({\n                        image: img,\n                        type: 'deleted',\n                    })\n                } else if (!old[img]) {\n                    // 图片未被删尽（多频图片） && 非镜像中的图片\n                    temp.push({\n                        image: img,\n                        type: 'inserted',\n                    })\n                }\n            }\n        })\n        return temp\n    }\n\n    /**\n     * 新增图片链接的数组集合\n     */\n    public inserted() {\n        return this.all()\n            .filter(row => row.type === 'inserted')\n            .map(row => row.image)\n    }\n\n    /**\n     * 被删除图片链接的数组集合\n     */\n    public deleted() {\n        return this.all()\n            .filter(row => row.type === 'deleted')\n            .map(row => row.image)\n    }\n\n    /**\n     * 统计当前的图片链接以及对应的链接次数\n     */\n    public statistics() {\n        const temp: Mirroring = {}\n        Object.keys(this.#listener).forEach(nodeName => {\n            const nodes = Array.from(this.#root.querySelectorAll(nodeName))\n            nodes.forEach(el => {\n                this.#listener[nodeName].forEach(attr => {\n                    if (el.hasAttribute(attr)) {\n                        const img = el.getAttribute(attr) as string\n                        if (temp[img]) {\n                            temp[img] += 1\n                        } else {\n                            temp[img] = 1\n                        }\n                    }\n                })\n            })\n        })\n        return temp\n    }\n\n    /**\n     * 重新构建镜像数据（将此刻的图片数据作为后续的判断依据，且曾经的历史记录将被清除）\n     */\n    public rebuild() {\n        this.#mirroring = this.statistics()\n        this.clear()\n        return this.mirroring\n    }\n\n    /**\n     * 清除所有的历史记录\n     */\n    public clear() {\n        this.#changed.clear()\n    }\n\n    /**\n     * 销毁监听器\n     */\n    public destory() {\n        this.#observer.disconnect()\n        this.#changed.clear()\n        this.#listener = {}\n        this.#mirroring = {}\n    }\n\n    /**\n     * 验证链接是否符合规范\n     * @param img 图片链接\n     */\n    public valid(img: string) {\n        for (let fn of this.#rules) {\n            if (!fn(img)) {\n                return false\n            }\n        }\n        return true\n    }\n}\n"],"sourceRoot":""}