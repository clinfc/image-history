!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.ImageHistory=e():t.ImageHistory=e()}(window,(function(){return function(t){var e={};function r(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,r),s.l=!0,s.exports}return r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)r.d(i,s,function(e){return t[e]}.bind(null,s));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";var i,s,n,o,a,u,c=this&&this.__classPrivateFieldSet||function(t,e,r){if(!e.has(t))throw new TypeError("attempted to set private field on non-instance");return e.set(t,r),r},h=this&&this.__classPrivateFieldGet||function(t,e){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return e.get(t)};function f(t){const e=[];return Object.values(t).forEach(t=>{e.push(...t)}),e}function l(t,e){const r=new Set;return function(t,e){return e instanceof Element&&t[e.nodeName]instanceof Set}(e,t)&&e[t.nodeName].forEach(e=>{t.hasAttribute(e)&&r.add(t.getAttribute(e))}),[...r]}Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(t,e,r,d=!0){i.set(this,void 0),s.set(this,{}),n.set(this,void 0),o.set(this,void 0),a.set(this,new Map),u.set(this,[]),c(this,i,t),e&&"object"==typeof e&&Object.keys(e).forEach(t=>{h(this,s)[t.toUpperCase()]=new Set(e[t])}),h(this,s).IMG?h(this,s).IMG.add("src"):h(this,s).IMG=new Set(["src"]),!1!==r&&d&&h(this,u).push((function(t){return!/^(data:|blob:)/.test(t)})),Array.isArray(r)?h(this,u).push(...r):"function"==typeof r&&h(this,u).push(r),c(this,o,this.statistics()),c(this,n,new MutationObserver(t=>{t.forEach(t=>{if("childList"==t.type){const{addedNodes:e,removedNodes:r}=t;r.forEach(t=>{l(t,h(this,s)).forEach(t=>{this.valid(t)&&h(this,a).set(t,!1)})}),e.forEach(t=>{l(t,h(this,s)).forEach(t=>{this.valid(t)&&h(this,a).set(t,!0)})})}else{const{target:n,oldValue:o,attributeName:u}=t;if(e=h(this,s),r=n,(i=u)&&r instanceof Element&&e[r.nodeName]instanceof Set&&e[r.nodeName].has(i)){o&&this.valid(o)&&h(this,a).set(o,!1);const t=n.getAttribute(u);t&&this.valid(t)&&h(this,a).set(t,!0)}}var e,r,i})})),h(this,n).observe(t,{subtree:!0,childList:!0,attributes:!0,attributeOldValue:!0,attributeFilter:f(h(this,s))})}get root(){return h(this,i)}get mirroring(){return Object.assign({},h(this,o))}get listener(){const t={};return Object.entries(h(this,s)).forEach(([e,r])=>{t[e]=[...r]}),t}all(){const t=h(this,o),e=this.statistics(),r=[];return h(this,a).forEach((i,s)=>{i&&!t[s]?r.push({image:s,type:"inserted"}):e[s]?t[s]||r.push({image:s,type:"inserted"}):r.push({image:s,type:"deleted"})}),r}inserted(){return this.all().filter(t=>"inserted"===t.type).map(t=>t.image)}deleted(){return this.all().filter(t=>"deleted"===t.type).map(t=>t.image)}statistics(){const t={};return Object.keys(h(this,s)).forEach(e=>{Array.from(h(this,i).querySelectorAll(e)).forEach(r=>{h(this,s)[e].forEach(e=>{if(r.hasAttribute(e)){const i=r.getAttribute(e);t[i]?t[i]+=1:t[i]=1}})})}),t}rebuild(){return c(this,o,this.statistics()),this.clear(),this.mirroring}clear(){h(this,a).clear()}destory(){h(this,n).disconnect(),h(this,a).clear(),c(this,s,{}),c(this,o,{})}valid(t){for(let e of h(this,u))if(!e(t))return!1;return!0}},i=new WeakMap,s=new WeakMap,n=new WeakMap,o=new WeakMap,a=new WeakMap,u=new WeakMap}]).default}));
//# sourceMappingURL=index.min.js.map