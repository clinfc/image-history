(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["ImageHistory"] = factory();
	else
		root["ImageHistory"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, privateMap, value) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to set private field on non-instance\");\n  }\n\n  privateMap.set(receiver, value);\n  return value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, privateMap) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n};\n\nvar _root, _listener, _observer, _primordial, _changed, _rules;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction attributeFilter(listener) {\n  const filter = [];\n  Object.values(listener).forEach(row => {\n    filter.push(...row);\n  });\n  return filter;\n}\n\nfunction initConfig(listener) {\n  return {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    attributeOldValue: true,\n    attributeFilter: attributeFilter(listener)\n  };\n}\n\nfunction isValidElem(listener, node) {\n  return node instanceof Element && listener[node.nodeName] instanceof Set;\n}\n\nfunction isValidAttr(listener, node, attr) {\n  return attr && node instanceof Element && listener[node.nodeName] instanceof Set && listener[node.nodeName].has(attr);\n}\n\nfunction verify(node, listener, changed, value) {\n  const images = new Set();\n\n  if (isValidElem(listener, node)) {\n    listener[node.nodeName].forEach(attr => {\n      if (node.hasAttribute(attr)) {\n        images.add(node.getAttribute(attr));\n      }\n    });\n  }\n\n  return [...images];\n}\n\nfunction statistics(root, listener) {\n  const temp = {};\n  Object.keys(listener).forEach(nodeName => {\n    const nodes = Array.from(root.querySelectorAll(nodeName));\n    nodes.forEach(el => {\n      listener[nodeName].forEach(attr => {\n        if (el.hasAttribute(attr)) {\n          const img = el.getAttribute(attr);\n\n          if (temp[img]) {\n            temp[img] += 1;\n          } else {\n            temp[img] = 1;\n          }\n        }\n      });\n    });\n  });\n  return temp;\n}\n\nclass ImageHistory {\n  constructor(root, targets, filter, defFilter = true) {\n    _root.set(this, void 0);\n\n    _listener.set(this, {});\n\n    _observer.set(this, void 0);\n\n    _primordial.set(this, void 0);\n\n    _changed.set(this, new Map());\n\n    _rules.set(this, []);\n\n    __classPrivateFieldSet(this, _root, root);\n\n    if (targets && typeof targets === 'object') {\n      Object.keys(targets).forEach(nodeName => {\n        __classPrivateFieldGet(this, _listener)[nodeName.toUpperCase()] = new Set(targets[nodeName]);\n      });\n    }\n\n    if (__classPrivateFieldGet(this, _listener)['IMG']) {\n      __classPrivateFieldGet(this, _listener)['IMG'].add('src');\n    } else {\n      __classPrivateFieldGet(this, _listener)['IMG'] = new Set(['src']);\n    }\n\n    if (filter !== false && defFilter) {\n      __classPrivateFieldGet(this, _rules).push(function (value) {\n        return !/^(blob:.+;base64:|data:)/.test(value);\n      });\n    }\n\n    if (Array.isArray(filter)) {\n      __classPrivateFieldGet(this, _rules).push(...filter);\n    } else if (typeof filter === 'function') {\n      __classPrivateFieldGet(this, _rules).push(filter);\n    }\n\n    __classPrivateFieldSet(this, _primordial, statistics(__classPrivateFieldGet(this, _root), __classPrivateFieldGet(this, _listener)));\n\n    __classPrivateFieldSet(this, _observer, new MutationObserver(mutations => {\n      mutations.forEach(record => {\n        if (record.type == 'childList') {\n          const {\n            addedNodes,\n            removedNodes\n          } = record;\n          removedNodes.forEach(node => {\n            verify(node, __classPrivateFieldGet(this, _listener)).forEach(img => {\n              if (this.valid(img)) {\n                __classPrivateFieldGet(this, _changed).set(img, false);\n              }\n            });\n          });\n          addedNodes.forEach(node => {\n            verify(node, __classPrivateFieldGet(this, _listener)).forEach(img => {\n              if (this.valid(img)) {\n                __classPrivateFieldGet(this, _changed).set(img, true);\n              }\n            });\n          });\n        } else {\n          const {\n            target,\n            oldValue,\n            attributeName\n          } = record;\n\n          if (isValidAttr(__classPrivateFieldGet(this, _listener), target, attributeName)) {\n            if (oldValue && this.valid(oldValue)) {\n              __classPrivateFieldGet(this, _changed).set(oldValue, false);\n            }\n\n            const attr = target.getAttribute(attributeName);\n\n            if (attr && this.valid(attr)) {\n              __classPrivateFieldGet(this, _changed).set(attr, true);\n            }\n          }\n        }\n      });\n    }));\n\n    __classPrivateFieldGet(this, _observer).observe(root, initConfig(__classPrivateFieldGet(this, _listener)));\n  }\n\n  get root() {\n    return __classPrivateFieldGet(this, _root);\n  }\n\n  get listener() {\n    const temp = {};\n    Object.entries(__classPrivateFieldGet(this, _listener)).forEach(([nodeName, attrs]) => {\n      temp[nodeName] = [...attrs];\n    });\n    return temp;\n  }\n\n  get primordial() {\n    return Object.entries(__classPrivateFieldGet(this, _primordial));\n  }\n\n  statistics() {\n    return Object.entries(statistics(__classPrivateFieldGet(this, _root), __classPrivateFieldGet(this, _listener)));\n  }\n\n  deleted() {\n    return this.all().filter(row => row.type === 'deleted').map(row => row.image);\n  }\n\n  inserted() {\n    return this.all().filter(row => row.type === 'inserted').map(row => row.image);\n  }\n\n  all() {\n    const now = statistics(__classPrivateFieldGet(this, _root), __classPrivateFieldGet(this, _listener));\n    const deleted = Object.keys(__classPrivateFieldGet(this, _primordial)).filter(img => !now[img]);\n    const temp = [];\n\n    __classPrivateFieldGet(this, _changed).forEach((status, img) => {\n      if (!__classPrivateFieldGet(this, _primordial)[img] || deleted.includes(img)) {\n        temp.push({\n          image: img,\n          type: status ? 'inserted' : 'deleted'\n        });\n      }\n    });\n\n    return temp;\n  }\n\n  clear() {\n    __classPrivateFieldGet(this, _changed).clear();\n  }\n\n  destory() {\n    __classPrivateFieldGet(this, _observer).disconnect();\n\n    __classPrivateFieldGet(this, _changed).clear();\n\n    __classPrivateFieldSet(this, _listener, {});\n\n    __classPrivateFieldSet(this, _primordial, {});\n  }\n\n  valid(img) {\n    return __classPrivateFieldGet(this, _rules).reduce((ar, fn) => ar && fn(img), true);\n  }\n\n}\n\nexports.default = ImageHistory;\n_root = new WeakMap(), _listener = new WeakMap(), _observer = new WeakMap(), _primordial = new WeakMap(), _changed = new WeakMap(), _rules = new WeakMap();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ })["default"];
});